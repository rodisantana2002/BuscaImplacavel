id,arquivo,tipo,txtorigem,txttranslate,datahoracarga,datahoratranslate
1,arquivo2,TIT,Exploring Processes in Small Software Companies: A Systematic Review,Explorando Processos em Pequenas Empresas de Software: Uma Revisão Sistemática,05/05/2019 19:49:01,05/05/2019 19:50:13
2,arquivo2,AUT,"Nirnaya Tripathi(&), Elina Annanperä, Markku Oivo(&), and Kari Liukkunen","Nirnaya Tripathi (e), Elina Annanpera, Markku Oivo (&) e Kari Liukkunen",05/05/2019 19:49:01,05/05/2019 19:50:20
3,arquivo2,###,"M3S Research Unit, University of Oulu, Oulu, Finland {Nirnaya.Tripathi,Elina.Annanpera, Markku.Oivo,Kari.Liukkunen}@oulu.ﬁ","Unidade de Pesquisa M3S, Universidade de Oulu, Oulu, Finlândia {Nirnaya.Tripathi, Elina.Annanpera, Markku.Oivo, Kari.Liukkunen} @oulu.",05/05/2019 19:49:01,05/05/2019 19:50:28
4,arquivo2,ABS,"Abstract. Context: To attain an advantage over competitors, small software companies (SSCs) need to have an efcient software development process. However, systematic review studies that have examined the software develop- ment process within the context of SSCs are limited. Objective: Therefore, the objective of this paper is to rigorously assess the current state of practice of the software development process of SSCs using ISO/IEC 12207 standard as an analyzing framework. Method: A systematic literature review was conducted to analyze relevant papers published between 2004 and 2014. The selected papers were categorized according to the empirical technique used. A total of 41 pri- mary papers focusing on various aspects of the software development process of SSCs were discovered out of 3841 papers. Results: Based on the evidence found in primary papers, requirement engineering, project planning, life cycle model management and conguration management are the frequently considered processes for improvement when software process improvement (SPI) programs are conducted in SSCs. In addition, understanding the collected requirements and communication barriers between product management and the rest of the work team were among the challenges observed and experienced by SSCs during the software development process.","Abstrato. Contexto: Para obter vantagem sobre os concorrentes, as pequenas empresas de software (SSCs) precisam ter um processo de desenvolvimento de software eficiente. No entanto, estudos de revisão sistemática que examinaram o processo de desenvolvimento de software dentro do contexto de SSCs são limitados. Objetivo: Portanto, o objetivo deste artigo é avaliar rigorosamente o estado atual da prática do processo de desenvolvimento de software de SSCs usando a norma ISO / IEC 12207 como uma estrutura de análise. Método: Uma revisão sistemática da literatura foi realizada para analisar artigos relevantes publicados entre 2004 e 2014. Os artigos selecionados foram categorizados de acordo com a técnica empírica utilizada. Um total de 41 artigos principais focados em vários aspectos do processo de desenvolvimento de software de SSCs foram descobertos a partir de 3841 artigos. Resultados: Com base nas evidências encontradas em artigos primários, a engenharia de requisitos, o planejamento de projetos, o gerenciamento de modelos de ciclo de vida e o gerenciamento de configurações são os processos freqüentemente considerados para melhoria quando programas de melhoria de processos de software (SSI) são conduzidos em SSCs. Além disso, a compreensão dos requisitos coletados e as barreiras de comunicação entre o gerenciamento de produtos e o restante da equipe de trabalho estavam entre os desafios observados e experimentados pelas SSCs durante o processo de desenvolvimento de software.",05/05/2019 19:49:01,05/05/2019 19:50:35
5,arquivo2,WOR,Keywords: Software process  Small software company  Systematic literature review  ISO/IEC 12207,Palavras-chave: Processo de software? Pequena empresa de software? Revisão sistemática da literatura? ISO / IEC 12207,05/05/2019 19:49:01,05/05/2019 19:50:42
6,arquivo2,###,1 Introduction,1. Introdução,05/05/2019 19:49:01,05/05/2019 19:50:49
7,arquivo2,###,"In the global economy, the most rapidly growing sector is the software industry, which has emerged as one of the key economic drivers for many nations [1]. Another sig- nicant entity that contributes to driving the world economy is the small software company (SSC). SSCs play an important role in their nations’ economies because of their ability to capture the kinds of markets that larger companies are incapable of reaching or have rejected. SSCs typically consist of less than 50 employees, and their aim is to create one or a few software products for their customers [2]. They also develop components for larger systems produced by other companies or offer main- tenance services for the software products created by other rms [3].","Na economia global, o setor de crescimento mais rápido é a indústria de software, que emergiu como um dos principais motores econômicos de muitas nações [1]. Outra entidade importante que contribui para impulsionar a economia mundial é a pequena empresa de software (SSC). Os CSCs desempenham um papel importante nas economias de seus países por causa de sua capacidade de capturar os tipos de mercados que as empresas maiores são incapazes de alcançar ou de rejeitar. Normalmente, os SSCs consistem em menos de 50 funcionários e seu objetivo é criar um ou alguns produtos de software para seus clientes [2]. Eles também desenvolvem componentes para sistemas maiores produzidos por outras empresas ou oferecem serviços de manutenção para os produtos de software criados por outras empresas [3].",05/05/2019 19:49:01,05/05/2019 19:50:55
8,arquivo2,###,"© Springer International Publishing Switzerland 2016 P.M. Clarke et al. (Eds.): SPICE 2016, CCIS 609, pp. 150–165, 2016. DOI: 10.1007/978-3-319-38980-6_12","© Springer International Publishing Suíça 2016, P.M. Clarke et al. (Eds.): SPICE 2016, CCIS 609, pp. 150–165, 2016. DOI: 10.1007 / 978-3-319-38980-6_12",05/05/2019 19:49:01,05/05/2019 19:51:02
9,arquivo2,###,,,05/05/2019 19:49:01,05/05/2019 19:51:09
10,arquivo2,###,"To maintain their competitiveness in their target markets and to sustain a healthy relationship with their customers, SSCs need to supply increasingly faster and cheaper software products [4]. To develop such software products, these companies need to have efcient software development processes [5]. SSCs denitely need all the assis- tance in seeking the relevant information to make their software development processes efcient, but they often lack systematic process knowledge for determining which type of processes are more relevant to their context [3, 6]. One way to analyze software process knowledge is by systematically examining the existing literature on SSCs. Some systematic literature reviews (SLRs) have focused on analyzing the existing approaches toward software process improvement (SPI) in small and medium enter- prises (SMEs). For example, Pino et al. [7] concluded that models such as Capability Maturity Model Integration (CMMI) and Software Process Improvement and Capa- bility Determination (SPICE) are not suitable for SPI programs in SMEs and instead proposed the use of lighter-weight models. Sulayman and Mendes [8] concluded that very few studies have explicitly focused on SPI for Web companies. Paternoster et al. [9] and Klotins et al. [10] described the software development of start-ups. However, systematic review studies in the context of SSCs and their software development processes are limited [11]. Therefore, there is a need for systematic review studies in the SSC context with the goal to explore the state-of-practice of software processes and the types of challenges associated with it. In this paper, we present a systematic review of the literature, with the aim of identifying the software processes utilized in SSCs. We have used the ISO/IEC 12207 [12] processes as an analyzing framework to describe both the current state-of-practice and challenges present in the software development processes. The paper proceeds as follows. In Sect. 2, the background and motivation are described. In Sect. 3, the sys- tematic review is presented. Section 4 presents the results from the review, followed by a discussion of the research questions presented and our conclusions.","Para manter sua competitividade em seus mercados-alvo e manter um relacionamento saudável com seus clientes, os SSCs precisam fornecer produtos de software cada vez mais rápidos e baratos [4]. Para desenvolver tais produtos de software, essas empresas precisam ter processos de desenvolvimento de software eficientes [5]. Os CSCs definitivamente precisam de toda a assistência na busca de informações relevantes para tornar seus processos de desenvolvimento de software eficientes, mas muitas vezes carecem de conhecimento sistemático do processo para determinar quais tipos de processos são mais relevantes para seu contexto [3, 6]. Uma forma de analisar o conhecimento do processo de software é examinando sistematicamente a literatura existente sobre SSCs. Algumas revisões sistemáticas de literatura (SLRs) focaram-se na análise das abordagens existentes para a melhoria de processos de software (SPI) em pequenas e médias empresas (SMEs). Por exemplo, Pino et al. [7] concluíram que modelos como CMMI (Capability Maturity Model Integration) e SPICE (Software Process Improvement and Capability Determination) não são adequados para programas SPI em PMEs e, em vez disso, propuseram o uso de modelos mais leves. Sulayman e Mendes [8] concluíram que muito poucos estudos se concentraram explicitamente no SPI para empresas da Web. Paternoster et al. [9] e Klotins et al. [10] descreveu o desenvolvimento de software de start-ups. No entanto, estudos de revisão sistemática no contexto de SSCs e seus processos de desenvolvimento de software são limitados [11]. Portanto, há uma necessidade de estudos de revisão sistemática no contexto do SSC com o objetivo de explorar o estado da prática dos processos de software e os tipos de desafios associados a ele. Neste artigo, apresentamos uma revisão sistemática da literatura, com o objetivo de identificar os processos de software utilizados nas CSS. Usamos os processos da ISO / IEC 12207 [12] como uma estrutura de análise para descrever tanto o estado atual da prática quanto os desafios presentes nos processos de desenvolvimento de software. O trabalho prossegue da seguinte forma. Na seita 2, o fundo e a motivação são descritos. Na seita 3, a revisão sistemática é apresentada. A seção 4 apresenta os resultados da revisão, seguidos de uma discussão sobre as questões de pesquisa apresentadas e nossas conclusões.",05/05/2019 19:49:01,05/05/2019 19:51:15
11,arquivo2,###,2 Background and Motivation,2 Antecedentes e Motivação,05/05/2019 19:49:01,05/05/2019 19:51:22
12,arquivo2,###,"SSCs are considered as an important entity in the software industry and they represent up to 85 % of all software companies [13, 2]. They often face vicious competition from their competitors in developing quality software products on a strict deadline to fulll customer requirements [2]. Their software development activity is generally in casual state [14]. Therefore, in order to improve their productivity, they need to improve their software development processes [15]. However, SSCs typically avoid process improvements [15]. This avoidance mainly appears due to the lack of nancial and human resources [14]. To help SSCs, it is important for the software engineering research community to explore software processes in detail. Doing this will provide added value to the practitioners operating in the small-scale context. There are some SLRs that have focused on the improvement of software devel- opment processes in SMEs. For example, Pino et al. [7] analyzed the existing approaches toward SPI in SMEs. They concluded that proper SPI programs based on models such as CMMI and SPICE are not suitable for SMEs and proposed the use of lighter-weight models. They also observed in their study that frequently improved","Os CSCs são considerados uma entidade importante na indústria de software e representam até 85% de todas as empresas de software [13, 2]. Frequentemente enfrentam uma concorrência feroz de seus concorrentes no desenvolvimento de produtos de software de qualidade em um prazo estrito para atender às necessidades dos clientes [2]. Sua atividade de desenvolvimento de software é geralmente em estado casual [14]. Portanto, a fim de melhorar sua produtividade, eles precisam melhorar seus processos de desenvolvimento de software [15]. No entanto, os SSCs geralmente evitam melhorias no processo [15]. Esta evitação aparece principalmente devido à falta de recursos financeiros e humanos [14]. Para ajudar os CSCs, é importante que a comunidade de pesquisa de engenharia de software explore os processos de software em detalhes. Isso proporcionará valor agregado aos profissionais que operam no contexto de pequena escala. Existem algumas SLRs que se concentraram na melhoria dos processos de desenvolvimento de software nas PMEs. Por exemplo, Pino et al. [7] analisaram as abordagens existentes para o SPI nas PME. Eles concluíram que programas adequados de SPI baseados em modelos como CMMI e SPICE não são adequados para PMEs e propuseram o uso de modelos mais leves. Eles também observaram em seu estudo que freqüentemente",05/05/2019 19:49:01,05/05/2019 19:51:28
13,arquivo2,###,,,05/05/2019 19:49:01,05/05/2019 19:51:35
14,arquivo2,###,"processes in SPI programs are project management, documentation, requirement change management, process establishment, conguration management, and require- ment elicitation. Sulayman and Mendes [8] conducted a systematic review study to determine the current state of research in SPI models and techniques used by small and medium Web development companies. They found that very few studies have explicitly focused on SPI for Web companies despite the large number of Web com- panies across the globe. Paternoster et al. [9] conducted a mapping study to explore the state of art of software development in start-ups. Their conclusion was that software engineering work practices are chosen based on the start-up context. Klotins et al. [10] also conducted a mapping study, in which they focused on the software engineering aspect of start-ups. They found that very few research papers have provided concrete evidence of software engineering knowledge areas in start-up companies. However, systematic review studies in the particular eld of SSCs focusing on the software development processes are limited [11]. To the best of our knowledge, an in-depth analysis of the studies reported in this context that describes the state-of-practice and the associated challenges with it does not appear to exist. To address this gap in the literature, we therefore decided to conduct a systematic review of the literature that focuses on software development processes in SSCs to explore this topic area. To analyze the software development processes in SSCs within a stan- dardized framework, we decided to follow the classication of processes as dened in ISO/IEC 12207 [12]. ISO/IEC 12207 includes a process reference model that cate- gorizes the processes related to software system into seven groups: agreement pro- cesses, organizational project-enabling processes, project processes, technical processes, software implementation processes, software support processes, and soft- ware reuse processes [12]. We did not consider ISO/IEC 29110 [16] as our analyzing framework since the standard is applicable to very small entities (up to 25 people), whereas our study focus is on SSCs (up to 50 people).","Os processos nos programas da SPI são gerenciamento de projetos, documentação, gerenciamento de mudanças de requisitos, estabelecimento de processos, gerenciamento de configuração e elicitação de requisitos. Sulayman e Mendes [8] conduziram um estudo de revisão sistemática para determinar o estado atual da pesquisa em modelos e técnicas de SPI usados ​​por pequenas e médias empresas de desenvolvimento da Web. Eles descobriram que pouquíssimos estudos se concentraram explicitamente no SPI para empresas da Web, apesar do grande número de empresas da Web em todo o mundo. Paternoster et al. [9] conduziram um estudo de mapeamento para explorar o estado da arte do desenvolvimento de software em start-ups. Sua conclusão foi que as práticas de trabalho de engenharia de software são escolhidas com base no contexto de start-up. Klotins et al. [10] também conduziram um estudo de mapeamento, no qual eles se concentraram no aspecto de engenharia de software de start-ups. Eles descobriram que muito poucos trabalhos de pesquisa forneceram evidências concretas de áreas de conhecimento de engenharia de software em empresas iniciantes. No entanto, estudos de revisão sistemática no campo específico de SSCs com foco nos processos de desenvolvimento de software são limitados [11]. Tanto quanto é do nosso conhecimento, uma análise aprofundada dos estudos relatados neste contexto, que descreve o estado da prática e os desafios associados a ele, parece não existir. Para resolver esta lacuna na literatura, decidimos, portanto, realizar uma revisão sistemática da literatura que se concentra em processos de desenvolvimento de software em SSCs para explorar esta área de tópico. Para analisar os processos de desenvolvimento de software em SSCs dentro de um framework padronizado, decidimos seguir a classi ﬁ cação de processos conforme definido na ISO / IEC 12207 [12]. A ISO / IEC 12207 inclui um modelo de referência de processos que classifica os processos relacionados ao sistema de software em sete grupos: processos de acordo, processos organizacionais de capacitação de projetos, processos de projeto, processos técnicos, processos de implementação de software, processos de suporte de software e soft - processos de reutilização de utensílios [12]. Não consideramos a ISO / IEC 29110 [16] como nossa estrutura de análise, pois a norma é aplicável a entidades muito pequenas (até 25 pessoas), enquanto nosso foco de estudo é em SSCs (até 50 pessoas).",05/05/2019 19:49:01,05/05/2019 19:51:41
15,arquivo2,###,3 Research Methodology,3 Metodologia de Pesquisa,05/05/2019 19:49:01,05/05/2019 19:51:48
16,arquivo2,###,Our literature review is based on the guidelines provided by Kitchenham and Charters [17]. We also used a software tool (StArt) to support our systematic review [18].,Nossa revisão de literatura é baseada nas diretrizes fornecidas por Kitchenham e Charters [17]. Também usamos uma ferramenta de software (StArt) para apoiar nossa revisão sistemática [18].,05/05/2019 19:49:01,05/05/2019 19:51:54
17,arquivo2,###,3.1 Research Question,3.1 Questão de Pesquisa,05/05/2019 19:49:01,05/05/2019 19:52:01
18,arquivo2,###,"The main goal of our review is to nd all the research studies that relate to the software development processes of SSCs and that describe the key processes used and any related challenges. To achieve this goal, the following research questions (RQs) are dened: RQ1: What is the state-of-practice in terms of the use of processes in small software companies? The outcome of this question is the current state of the processes used in SSCs. The state-of-practice is analyzed using the ISO 12207:2008 life-cycle processes.","O principal objetivo de nossa revisão é encontrar todos os estudos de pesquisa relacionados aos processos de desenvolvimento de software dos SSCs e que descrevem os principais processos utilizados e quaisquer desafios relacionados. Para atingir este objetivo, são definidas as seguintes questões de pesquisa (RQs): RQ1: Qual é o estado de prática em termos do uso de processos em pequenas empresas de software? O resultado dessa questão é o estado atual dos processos usados ​​nos SSCs. O estado da prática é analisado usando os processos do ciclo de vida ISO 12207: 2008.",05/05/2019 19:49:01,05/05/2019 19:52:07
19,arquivo2,###,,,05/05/2019 19:49:01,05/05/2019 19:52:14
20,arquivo2,###,Exploring Processes in Small Software Companies 153,Explorando Processos em Pequenas Empresas de Software 153,05/05/2019 19:49:01,05/05/2019 19:52:20
21,arquivo2,###,3.2 Search Strategy and Data Retrieval,3.2 Estratégia de Pesquisa e Recuperação de Dados,05/05/2019 19:49:01,05/05/2019 19:52:27
22,arquivo2,###,"The initial sets of keywords for SSCs were taken from the work of Pino et al. [7]. Pilot searches in the key software engineering research domain databases were conducted, and new keywords were added to better target the searches to the desired data set. In the end, the search strings were formulated by combining the terms representing the population AND intervention. It can be summarized as follows: (X1 OR X2…OR Xn) AND (Y1 OR Y2…OR Yn), where X represents the population and Y represent intervention. The population (X) is represented as {software engineering process, software process, software engineering}, whereas intervention (Y) is represented as {small company, small enterprises, small organizations, small team, and small set- tings}. During the data retrieval process, the publication period was set to 2004 to 2014, with the purpose of summarizing the most recent related work.We used a total of four databases in our study: (cid:129) Scopus (http://www.scopus.com/) (cid:129) IEEE Xplore (http://ieeexplore.ieee.org) (cid:129) Science Direct (http://www.sciencedirect.com/) (cid:129) Web of Science (http://www.webofknowledge.com).","Os conjuntos iniciais de palavras-chave para SSCs foram retirados do trabalho de Pino et al. [7] Pesquisas piloto nos principais bancos de dados de domínio de pesquisa de engenharia de software foram realizadas e novas palavras-chave foram adicionadas para melhor direcionar as pesquisas para o conjunto de dados desejado. No final, as seqüências de pesquisa foram formuladas combinando os termos que representam a população e intervenção. Pode ser resumido da seguinte forma: (X1 OU X2… OR Xn) E (Y1 OU Y2… ORYn), onde X representa a população e Y representa intervenção. A população (X) é representada como {processo de engenharia de software, processo de software, engenharia de software}, enquanto a intervenção (Y) é representada por {pequena empresa, pequenas empresas, pequenas organizações, pequena equipe e pequenas configurações}. Durante o processo de recuperação de dados, o período de publicação foi definido de 2004 a 2014, com o objetivo de resumir os trabalhos relacionados mais recentes. Utilizamos um total de quatro bases de dados em nosso estudo: (cid: 129) Scopus (http: // www .scopus.com /) (cid: 129) IEEE Xplore (http://ieeexplore.ieee.org) (cid: 129) Science Direct (http://www.sciencedirect.com/) (cid: 129) Web de Ciência (http://www.webofknowledge.com).",05/05/2019 19:49:01,05/05/2019 19:52:33
23,arquivo2,###,3.3 Study Selection and Data Extraction,3.3 Seleção de Estudos e Extração de Dados,05/05/2019 19:49:01,05/05/2019 19:52:40
24,arquivo2,###,"The database searches resulted in identifying 7967 papers, out of which 4022 were duplicates. The remaining 3945 papers were screened and assessed by two researchers. The inclusion/exclusion criteria were determined based on title, abstract, and keywords, implicitly or explicitly (see Table 1). The papers were categorized as “accepted”, “rejected” or “can’t decide” (in StArt terms, “unclassied” is used to the same extent). The “can’t decide” papers were discussed, and issues were resolved between the rst and second author. After that, 104 papers were selected for full text reading. Thus, 41 studies were nally selected as the primary study papers. For quality assessment, we used the systematic and validated model [19] to assess the scientic rigor and industrial relevance of each primary study. For scientic rigor, we considered the following aspects: context, study design, and validity. For industrial relevance, we considered the following aspects: subjects, context, scale, and research method.More details about the papers, based on scientic rigor and industrial relevance, are shown in Fig. 1. Data extraction and analysis was done through qualitative data analysis using the NVivo software. We used the deductive approach for coding the primary studies [20].","As buscas na base de dados resultaram na identificação de 7967 artigos, dos quais 4022 eram duplicados. Os restantes 3945 artigos foram selecionados e avaliados por dois pesquisadores. Os critérios de inclusão / exclusão foram determinados com base no título, resumo e palavras-chave, implícita ou explicitamente (ver Tabela 1). Os artigos foram categorizados como ""aceito"", ""rejeitado"" ou ""não pode decidir"" (em termos de estatueta, o termo ""não classificado"" é usado na mesma medida). Os artigos ""não posso decidir"" foram discutidos e os problemas foram resolvidos entre o primeiro e o segundo autor. Depois disso, 104 trabalhos foram selecionados para leitura do texto completo. Assim, 41 estudos foram finalmente selecionados como os principais trabalhos do estudo. Para avaliação da qualidade, utilizamos o modelo sistemático e validado [19] para avaliar o rigor científico e a relevância industrial de cada estudo primário. Por rigor científico, consideramos os seguintes aspectos: contexto, desenho do estudo e validade. Para relevância industrial, foram considerados os seguintes aspectos: temas, contexto, escala e método de pesquisa. Mais detalhes sobre os trabalhos, baseados no rigor científico e na relevância industrial, são mostrados na Figura 1. A extração e análise dos dados foram feitas através de análise de dados qualitativos usando o software NVivo. Usamos a abordagem dedutiva para codificar os estudos primários [20].",05/05/2019 19:49:01,05/05/2019 19:52:47
25,arquivo2,###,,,05/05/2019 19:49:01,05/05/2019 19:52:54
26,arquivo2,###,"Table 1. Inclusion/exclusion criteria Inclusion criteria Exclusion criteria Articles (1) Reports an empirical study and/or Title, Abstract, Keywords: (1) The 104 (2) reports a study on small software main focus was not on the small companies and the software software companies and/or the development process software development process; or (2) the paper was not available; or (3) it was not in English; or (4) the paper was a letter, editorial, or position paper Full Text Read: (1) No reported result or (2) same content as other studies (extended papers, summaries)","Tabela 1. Critérios de Inclusão / Exclusão Critérios de Inclusão Critérios de Exclusão Artigos (1) Relata um estudo empírico e / ou Título, Resumo, Palavras-chave: (1) O 104 (2) relata um estudo sobre pequeno foco principal de software não foi sobre as pequenas empresas e as empresas de software e / ou processo de desenvolvimento de software de processo de desenvolvimento; ou (2) o papel não estava disponível; ou (3) não estava em inglês; ou (4) o artigo foi uma carta, editorial ou documento de posição Texto Completo Leia: (1) Nenhum resultado relatado ou (2) o mesmo conteúdo de outros estudos (artigos estendidos, resumos)",05/05/2019 19:49:01,05/05/2019 19:53:00
27,arquivo2,###,41,41,05/05/2019 19:49:01,05/05/2019 19:53:08
28,arquivo2,###,3.4 Validity Discussion,3.4 Discussão sobre Validade,05/05/2019 19:49:01,05/05/2019 19:53:14
29,arquivo2,###,"In this section, we discuss the validity of our study in terms of construct validity, internal validity, external validity, and reliability [21]. Construct validity deals with whether the primary study papers focused on the software development processes and SSCs. During the search process, search strings were designed in such a way that they would collect a wide variety of papers related to this topic. To collect the papers, databases that are frequently used for accessing software engineering literature were used. During the full-text selection phase, manual screening was conducted twice to ensure that only papers relevant to the research questions were included. Reliability concerns whether the study can be repeated by the other researchers. Our study was based on a systematic review process protocol with well-dened search strings in the most common databases through the use of the SLR tool. Therefore, our review process can easily be reproduced by other researchers. The inclusion and exclusion criteria were piloted and followed during the review process. Internal validity refers to prob- lems in the analysis of the data. During the execution phase, some primary study candidate papers did not show clear objectives and results, which made inclusion/exclusion criteria difcult. To overcome this situation, several meetings were arranged between the authors to evaluate the discrepant papers and eliminate the ones that did not match the inclusion/exclusion criteria. External validity concerns whether the results of an SLR can be generalized. In this situation, the results from this study were limited to the SSC context; therefore, both researchers and industrial communities interested in the software development processes of SSCs can benet from our ndings.","Nesta seção, discutimos a validade de nosso estudo em termos de validade de construto, validade interna, validade externa e confiabilidade [21]. Validade de construção lida com se os estudos preliminares se concentraram nos processos de desenvolvimento de software e SSCs. Durante o processo de pesquisa, as sequências de pesquisa eram projetadas de modo a coletar uma grande variedade de artigos relacionados a esse tópico. Para coletar os artigos, bancos de dados que são freqüentemente usados ​​para acessar literatura de engenharia de software foram usados. Durante a fase de seleção de texto completo, a triagem manual foi realizada duas vezes para garantir que apenas os artigos relevantes para as questões de pesquisa fossem incluídos. Confiabilidade diz respeito a se o estudo pode ser repetido pelos outros pesquisadores. Nosso estudo baseou-se em um protocolo de processo de revisão sistemática com sequências de pesquisa bem definidas nas bases de dados mais comuns por meio do uso da ferramenta SLR. Portanto, nosso processo de revisão pode ser facilmente reproduzido por outros pesquisadores. Os critérios de inclusão e exclusão foram testados e seguidos durante o processo de revisão. A validade interna refere-se a problemas na análise dos dados. Durante a fase de execução, alguns trabalhos dos candidatos primários ao estudo não mostraram objetivos e resultados claros, o que dificultou os critérios de inclusão / exclusão. Para superar esta situação, foram organizadas várias reuniões entre os autores para avaliar os artigos discrepantes e eliminar aqueles que não correspondiam aos critérios de inclusão / exclusão. A validade externa diz respeito a se os resultados de uma SLR podem ser generalizados. Nesta situação, os resultados deste estudo foram limitados ao contexto do SSC; portanto, tanto os pesquisadores quanto as comunidades industriais interessadas nos processos de desenvolvimento de software de SSCs podem se beneficiar de nossas descobertas.",05/05/2019 19:49:01,05/05/2019 19:53:20
30,arquivo2,###,4 Results,4 Resultados,05/05/2019 19:49:01,05/05/2019 19:53:27
31,arquivo2,###,"As a result of the systematic review, a total of 41 primary studies were found to be relevant to the RQs. The descriptions of the 41 papers are shown in Table 2. In the following section, we give an overview of the primary studies. We then explore the","Como resultado da revisão sistemática, um total de 41 estudos primários foram considerados relevantes para os RQs. As descrições dos 41 artigos são mostradas na Tabela 2. Na seção a seguir, apresentamos uma visão geral dos estudos primários. Em seguida, exploramos o",05/05/2019 19:49:01,05/05/2019 19:53:33
32,arquivo2,###,,,05/05/2019 19:49:01,05/05/2019 19:53:40
33,arquivo2,###,Exploring Processes in Small Software Companies 155,Explorando Processos em Pequenas Empresas de Software 155,05/05/2019 19:49:01,05/05/2019 19:53:46
34,arquivo2,###,Table 2. List of primary studies ID Source Year Method ID Source Year Method [3] Scopus 2006 Case study (CS) [22] Scopus 2012 Ethnography [4] Scopus 2008 Case study [23] Scopus 2007 Case study [6] IEEE 2012 Case study [24] Scopus 2014 Case study [25] Scopus 2008 Case study [26] Scopus 2010 Case study [27] Scopus 2010 Case study [28] Scopus 2007 Experiment [29] Scopus 2010 Case study [30] IEEE 2012 Experiment [13] Scopus 2013 Action research [31] Scopus 2006 Case study [32] Scopus 2006 Case study [33] Scopus 2010 Survey [14] Scopus 2010 CS/Survey [34] Scopus 2009 Case study [15] IEEE 2009 Experiment [35] IEEE 2008 Case study [36] Web of science 2008 Survey [37] Web of science 2008 Experiment [38] Scopus 2013 Action research [39] Scopus 2005 Case study [40] WOS 2008 Case study [41] Scopus 2004 Survey [42] Scopus 2013 Case study [43] Scopus 2004 Case study [44] Scopus 2005 Case study [45] Scopus 2009 Case study [46] Scopus 2013 Survey [47] Scopus 2011 Case study [48] Scopus 2012 Case study [49] Scopus 2010 Case study [50] IEEE 2010 Case study [51] IEEE 2007 Case study [52] WOS 2004 Survey [53] Scopus 2012 Case study [54] IEEE 2006 Case study [55] Scopus 2011 Survey [56] Scopus 2009 Experiment,Tabela 2. Lista de estudos primários ID Fonte Ano Método ID Fonte Ano Método [3] Scopus 2006 Estudo de caso (CS) [22] Scopus 2012 Etnografia [4] Scopus 2008 Estudo de caso [23] Scopus 2007 Estudo de caso [6] IEEE 2012 Estudo de caso [24] Scopus 2014 Estudo de caso [25] Scopus 2008 Estudo de caso [26] Scopus 2010 Estudo de caso [27] Scopus 2010 Estudo de caso [28] Scopus 2007 Experimento [29] Scopus 2010 Estudo de caso [30] Experiência IEEE 2012 [ 13] Scopus 2013 Pesquisa de ação [31] Scopus 2006 Estudo de caso [32] Scopus 2006 Estudo de caso [33] Pesquisa Scopus 2010 [14] Scopus 2010 CS / Survey [34] Scopus 2009 Estudo de caso [15] Experimento IEEE 2009 [35] Estudo de caso do IEEE 2008 [36] Web of science 2008 Pesquisa [37] Web of science 2008 Experimento [38] Scopus 2013 Pesquisa de ação [39] Scopus 2005 Estudo de caso [40] WOS 2008 Estudo de caso [41] Pesquisa Scopus 2004 [42] Scopus 2013 Estudo de caso [43] Scopus 2004 Estudo de caso [44] Scopus 2005 Estudo de caso [45] Scopus 2009 Estudo de caso [46] Pesquisa Scopus 2013 [47] Scopus 2011 Estudo de caso [48] Scopus 2012 Case stud y [49] Scopus 2010 Estudo de caso [50] Estudo de caso do IEEE 2010 [51] Estudo de caso do IEEE 2007 [52] Pesquisa de 2004 do WOS [53] Estudo de caso do Scopus 2012 [54] Estudo de caso do IEEE 2006 [55] Pesquisa do Scopus 2011 [56] Experiência Scopus 2009,05/05/2019 19:49:01,05/05/2019 19:53:52
35,arquivo2,###,4.1 Overview of the Studies,4.1 Visão geral dos estudos,05/05/2019 19:49:01,05/05/2019 19:54:00
36,arquivo2,###,"Rigor and Relevance. The quality of the primary studies was evaluated according to rigor and relevance, as discussed in Sect. 3.3. As can be seen in Fig. 1, thirteen studies are in the upper-right quadrant (Rigor: High, Medium and Relevance: High, Medium) in the most appropriate region. Sixteen studies exhibited high industry relevance (Relevance: High), out of which ten showed low scientic rigor. Twenty-ve studies exhibited moderate industry relevance, out of which seven demonstrated medium rigor and eighteen demonstrated low rigor. Based on this evaluation, we established the fact that most of the identied studies were conducted in cooperation with an actual SSC, thus scoring medium or high on the relevance scale. However, many of these studies had low rigor.","Rigor e Relevância. A qualidade dos estudos primários foi avaliada de acordo com o rigor e relevância, como discutido na seção. 3.3. Como pode ser visto na figura 1, treze estudos estão no quadrante superior direito (Rigor: Alto, Médio e Relevância: Alto, Médio) na região mais apropriada. Dezesseis estudos exibiram alta relevância para a indústria (Relevância: Alta), dos quais dez apresentaram baixo rigor científico. Vinte e cinco estudos exibiram moderada relevância para a indústria, dos quais sete demonstraram médio rigor e dezoito demonstraram baixo rigor. Com base nessa avaliação, estabelecemos o fato de que a maioria dos estudos identificados foi conduzida em cooperação com um SSC real, pontuando médio ou alto na escala de relevância. No entanto, muitos desses estudos tinham baixo rigor.",05/05/2019 19:49:01,05/05/2019 19:54:06
37,arquivo2,###,,,05/05/2019 19:49:01,05/05/2019 19:54:13
38,arquivo2,###,"Research Methodology. Most of the studies focused on empirical evaluations of theoretical concepts related to the software development processes and were applied in an SSC context, with the overall goal of assessing and/or improving software devel- opment processes. In Fig. 1, it can be seen that the majority of the primary studies are listed in the case study category. The other common methods were surveys and experiments. Also, looking at the left-lower quadrant in Fig. 1, it can be seen that the majority of the papers (28; 18 case studies, 5 surveys, 4 experiments, and 1 ethno- graphic study) fell in the low rigor category. Therefore, generalizability of the results of the given studies is low.","Metodologia de Pesquisa. A maioria dos estudos se concentrou em avaliações empíricas de conceitos teóricos relacionados aos processos de desenvolvimento de software e foram aplicados em um contexto de SSC, com o objetivo geral de avaliar e / ou melhorar os processos de desenvolvimento de software. Na figura 1, pode ser visto que a maioria dos estudos primários estão listados na categoria de estudo de caso. Os outros métodos comuns eram pesquisas e experimentos. Além disso, olhando para o quadrante inferior esquerdo na Fig. 1, pode ser visto que a maioria dos trabalhos (28; 18 estudos de caso, 5 pesquisas, 4 experimentos e 1 estudo etnográfico) caíram na categoria de baixo rigor. . Portanto, a generalização dos resultados dos estudos apresentados é baixa.",05/05/2019 19:49:01,05/05/2019 19:54:19
39,arquivo2,###,High  (2-4) 1,Alta (2-4) 1,05/05/2019 19:49:01,05/05/2019 19:54:27
40,arquivo2,###,Rigor,Rigor,05/05/2019 19:49:01,05/05/2019 19:54:33
41,arquivo2,###,1,1,05/05/2019 19:49:01,05/05/2019 19:54:39
42,arquivo2,###,Medium  7 2  8 1 2   5  (1-2),Médio 7 2 8 1 2 5 (1-2),05/05/2019 19:49:01,05/05/2019 19:54:46
43,arquivo2,###,18   18 1  10 4 3,18   18 1  10 4 3,05/05/2019 19:49:01,05/05/2019 19:54:52
44,arquivo2,###,Low  (0-1),Baixo (0-1),05/05/2019 19:49:01,05/05/2019 19:54:58
45,arquivo2,###,Low  Medium  High  Case  Action  Experi- Ethno- Research  Survey (0-2)  (2-3)  ment graphy (3-4)  Study   Research Method Relevance,Low Medium High High Case Action Experi-Ethno-Research Survey (0-2) (2-3) grafias (3-4) Estudo Pesquisa Método Relevância,05/05/2019 19:49:01,05/05/2019 19:55:04
46,arquivo2,###,"Fig. 1. Overview of research method, rigor, and relevance distribution of papers","Fig. 1. Visão geral do método de pesquisa, rigor e distribuição de relevância dos artigos",05/05/2019 19:49:01,05/05/2019 19:55:11
47,arquivo2,###,4.2 Processes,4.2 Processos,05/05/2019 19:49:01,05/05/2019 19:55:18
48,arquivo2,###,"A detailed overview of processes as dened in the ISO/IEC 12207 and relevant primary study papers are shown in Table 3. SW Implementation Processes. Processes related to requirements are often consid- ered critical processes for improvement since SSCs aim to quickly deliver what their customers want using their own practices rather than including customer commands in their development process [15]. Generally, functional requirements are the main focus during the requirement gathering of the software product [52]. One challenge that SSCs experience is understanding what the collected requirements really mean. The gathered information needs to be clearly understood to change it into clear product requirements. Clear understanding is crucial because it is important to determine which requirements match the business goal. Without a clear understanding, it is difcult to determine which product requirements need to put into which release plan to meet the business goals. [27] In respect to software qualication testing, some studies have reported that some companies have had troubles with testing their products [24, 25]. One problem","Uma visão geral detalhada dos processos definidos na ISO / IEC 12207 e os principais documentos de estudo relevantes são mostrados na Tabela 3. Processos de implementação do SW. Processos relacionados a requisitos são frequentemente considerados processos críticos de melhoria, uma vez que os SSCs buscam entregar rapidamente o que seus clientes desejam usando suas próprias práticas, em vez de incluir comandos do cliente em seu processo de desenvolvimento [15]. Geralmente, os requisitos funcionais são o foco principal durante a coleta de requisitos do produto de software [52]. Um desafio que os CSCs enfrentam é entender o que os requisitos coletados realmente significam. As informações coletadas precisam ser claramente entendidas para transformá-las em requisitos claros do produto. O entendimento claro é crucial porque é importante determinar quais requisitos correspondem ao objetivo de negócios. Sem um entendimento claro, é difícil determinar quais requisitos do produto devem ser colocados em qual plano de liberação atender às metas de negócios. [27] Em relação ao teste de qualificação de software, alguns estudos relataram que algumas empresas tiveram problemas com o teste de seus produtos [24, 25]. Um problema",05/05/2019 19:49:01,05/05/2019 19:55:24
49,arquivo2,###,,,05/05/2019 19:49:01,05/05/2019 19:55:31
50,arquivo2,###,"was related to a deciency of testing knowledge in the company. This lack of knowledge results in a lack of test plans, which causes uncertainty in companies during the testing process [25]. This lack of knowledge can be due to the absence of dened process descriptions or the quality of instructional manuals. However, Clarke and O’Connor [46] found that a majority of companies report general improvements in testing, including a periodic increase in test suites, the creation of a standardized testing process, and more emphasis on performance testing. Another improvement reported was measuring more code coverage of the automated tests [46]. SW Support Processes. In regard to the software quality assurance (QA) process, Wilkie et al. [44] surveyed six companies and found that they each dened QA dif- ferently. For some, QA means testing, while for others, it is an instrument to assess a software product [44]. This confusion may be due to a lack of proper process knowledge. Regarding software conguration management (CM), one study [52] found that SSCs are able to perform basic CM tasks (i.e., version control, change manage- ment, and release management). One strength of the CM process in most of the companies was the code version control [52]. Some challenges with CM were also reported, such as uncertainty surrounding which work products should be with what version control and the lack of appropriate guidelines for CM [52].","estava relacionado a uma deficiência de testar conhecimento na empresa. Esta falta de conhecimento resulta na falta de planos de teste, o que causa incerteza nas empresas durante o processo de teste [25]. Esta falta de conhecimento pode ser devido à ausência de descrições de processos definidos ou à qualidade dos manuais de instrução. No entanto, Clarke e O'Connor [46] descobriram que a maioria das empresas relatam melhorias gerais nos testes, incluindo um aumento periódico nas suítes de testes, a criação de um processo de testes padronizado e mais ênfase no teste de desempenho. Outra melhoria relatada foi medir mais cobertura de código dos testes automatizados [46]. Processos de Suporte SW. Em relação ao processo de garantia de qualidade de software (QA), Wilkie et al. [44] pesquisaram seis empresas e descobriram que cada uma definia QA diferentemente. Para alguns, QA significa testar, enquanto para outros, é um instrumento para avaliar um produto de software [44]. Essa confusão pode ser devido à falta de conhecimento adequado do processo. Em relação ao gerenciamento de configuração de software (CM), um estudo [52] descobriu que os SSCs são capazes de realizar tarefas básicas de CM (ou seja, controle de versão, gerenciamento de mudanças e gerenciamento de versões). Uma força do processo de CM na maioria das empresas foi o controle de versão de código [52]. Alguns desafios com CM também foram relatados, como a incerteza em torno de quais produtos de trabalho devem estar com o controle de versão e a falta de diretrizes apropriadas para CM [52].",05/05/2019 19:49:01,05/05/2019 19:55:37
51,arquivo2,###,Table 3. Processes and relevant papers,Tabela 3. Processos e documentos relevantes,05/05/2019 19:49:01,05/05/2019 19:55:44
52,arquivo2,###,"Life cycle processes Primary study and frequency percentage Software specic processes SW implementation processes Software implementation – Software requirements [4, 15, 22–24, 26, 31, 32, 37, 39–46, 51, 56, 27] 49 % analysis Software architectural design Software detailed design [32, 43, 56] 7 % Software construction [3, 24, 37, 38, 41, 43, 56] 17 % Software integration [43] 2 % Software qualication [23–25, 31, 37, 38, 43, 46, 56] 22 % testing SW support processes Software documentation management Software conguration management Software quality assurance [22, 24, 26, 39, 41, 43, 44] 17 % Software verication, validation","Processos de ciclo de vida Estudo primário e percentagem de frequência Processos específicos de software Processos de implementação de SO Implementação de software - Requisitos de software [4, 15, 22-24, 26, 31, 32, 37, 39-46, 51, 56, 27] 49% análise Projeto de arquitetura de software Projeto detalhado de software [32, 43, 56] 7% Construção de software [3, 24, 37, 38, 41, 43, 56] 17% Integração de software [43] 2% Qualificação de software [23–25 , 31, 37, 38, 43, 46, 56] 22% testando processos de suporte a software Gerenciamento de documentação de software Gerenciamento de configuração de software Garantia de qualidade de software [22, 24, 26, 39, 41, 43, 44] 17% Software veri? cação, validação",05/05/2019 19:49:01,05/05/2019 19:55:51
53,arquivo2,###,"[23, 25, 49] 7 %","[23, 25, 49] 7 %",05/05/2019 19:49:01,05/05/2019 19:55:58
54,arquivo2,###,[24] 2 %,[24] 2 %,05/05/2019 19:49:01,05/05/2019 19:56:04
55,arquivo2,###,"[22, 24, 26, 41, 43, 44, 49, 51, 52] 22 %","[22, 24, 26, 41, 43, 44, 49, 51, 52] 22 %",05/05/2019 19:49:01,05/05/2019 19:56:10
56,arquivo2,###,–,–,05/05/2019 19:49:01,05/05/2019 19:56:17
57,arquivo2,###,(Continued),(Contínuo),05/05/2019 19:49:01,05/05/2019 19:56:23
58,arquivo2,###,,,05/05/2019 19:49:01,05/05/2019 19:56:29
59,arquivo2,###,"Table 3. (Continued) Life cycle processes Primary study and frequency percentage Software specic processes Software review, audit – Software problem [41, 43,3, 15, 31, 46, 49] 17 % resolution Software reuse processes – Domain engineering – Reuse asset management – Reuse program management System context processes Agreement processes Acquisition process – Supply process [3, 31, 46, 27] 10 % Organizational project- enabling processes Life cycle model [11, 27, 37, 48, 49,4, 6, 14, 16, 24, 47, 50, 51, 55,22, management 25, 32–34, 39, 42, 45, 53] Infrastructure management [46, 49] 5 % Project portfolio management Human resource management Quality management [37, 52] 5 % Project processes Project planning [6, 15, 22–24, 26, 37, 39, 40, 43–46, 50, 51, 54] 39 % Project assessment and [15, 24, 26, 39, 40, 44, 45, 51] 20 % control Decision management – Risk management [41, 43] 5 % Conguration management – Information management – Measurement [26, 34, 39, 44, 53] 12 % Technical processes Stakeholder requirements denition System requirements analysis System architectural design [50] 2 % Implementation –","Tabela 3. (Continuação) Processos do ciclo de vida Estudo primário e percentagem de frequência Processos específicos de software Revisão de software, auditoria - Problema de software [41, 43,3, 15, 31, 46, 49] 17% de resolução Processos de reutilização de software - Engenharia de domínio - Reutilizar a gestão de ativos - Reutilizar o gerenciamento de programas Processos de contexto do sistema Processos de acordo Processo de aquisição - Processo de fornecimento [3, 31, 46, 27] 10% Organizational project-enabling processes Modelo de ciclo de vida [11, 27, 37, 48, 49,4, 6, 14, 16, 24, 47, 50, 51, 55,22, gestão 25, 32-34, 39, 42, 45, 53] Gerenciamento de infraestrutura [46, 49] 5% Gerenciamento de portfólio de projetos Gerenciamento de recursos humanos Gerenciamento de qualidade [37, 52] 5% Processos do projeto Planejamento do projeto [6, 15, 22-24, 26, 37, 39, 40, 43-46, 50, 51, 54] 39% Avaliação do projeto e [15, 24, 26, 39, 40, 44, 45, 51] 20% de controle Gerenciamento de decisões - Gerenciamento de riscos [41, 43] 5% Gerenciamento de configuração - Gerenciamento de informações - Medição [26, 34, 39, 44, 53] 12% Tech Processos Nacionais Definição dos requisitos das partes interessadas Análise dos requisitos do sistema Projeto arquitetônico do sistema [50] 2% Implementação -",05/05/2019 19:49:01,05/05/2019 19:56:35
60,arquivo2,###,"[37, 49, 55] 7 %","[37, 49, 55] 7 %",05/05/2019 19:49:01,05/05/2019 19:56:42
61,arquivo2,###,[43] 2 %,[43] 2 %,05/05/2019 19:49:01,05/05/2019 19:56:48
62,arquivo2,###,56 %,56 %,05/05/2019 19:49:01,05/05/2019 19:56:55
63,arquivo2,###,–,–,05/05/2019 19:49:01,05/05/2019 19:57:01
64,arquivo2,###,–,–,05/05/2019 19:49:01,05/05/2019 19:57:07
65,arquivo2,###,–,–,05/05/2019 19:49:01,05/05/2019 19:57:13
66,arquivo2,###,(Continued),(Contínuo),05/05/2019 19:49:01,05/05/2019 19:57:19
67,arquivo2,###,,,05/05/2019 19:49:01,05/05/2019 19:57:26
68,arquivo2,###,–,–,05/05/2019 19:49:01,05/05/2019 19:57:32
69,arquivo2,###,"Agreement Processes. In the case of SSCs, no study has explicitly reported the use of processes within the acquisition process. The reason could be that SSCs are usually the ones who initially approach the customer. Since the amount of customers of SSCs is limited, this aspect is not well dened or of much interest. Regarding the supply process,Wangeheim et al. [3] found in their case study that this was one of the priority processes for improvement. In their other study [31] with eight companies, they found out that some of the companies had established systematic supply processes and had developed contract templates to improve relationships with their customers. Clarke and O’Connor [46], in their survey of 15 SMEs, found that those companies had made extensive improvements, specically in the area of tendering, as well as in negotiating with customers. Project Processes. On the subject of project processes, two studies [3, 32] that assessed SSCs reported that project management is considered a high-priority process. Saastamoinen and Tukiainen [52] pointed out that project planning is an important aspect in SSCs. In addition, within the project plan, the development approach should be clearly described. For SSCs, a project is managed in an iterative or incremental way, tending to follow the waterfall model. A project’s work capacity and time approxi- mation are usually calculated based on the project manager’s experience. Organizational Project-Enabling Processes. In relation to process establishment within life cycle model management, O’Connor et al. [29] explained that process establishment in SSCs is based on two categories: software development manager work background and market requirements [29]. From the perspective of an SSC, the ben- ets provided by a more standardized process could include increased competitiveness, superior customer satisfaction, and greater product quality [36]. Regarding process assessments, one study [14] reported that SSCs usually avoid the adoption of any process standards in their software development process. This may be due to the opinion that process standards are overly complex. However, in the context of process improvement, the objective for SSCs is to improve efciency within the organization, improve productivity, and reduce development time [43]. SSCs tend to have problems with effectively improving their software processes [13], and the major difculty could be a struggle to change [54]. In the context of knowledge management (KMP) within","Processos de Acordo. No caso de SSCs, nenhum estudo relatou explicitamente o uso de processos dentro do processo de aquisição. A razão pode ser que os SSCs geralmente são os que inicialmente abordam o cliente. Como a quantidade de clientes dos SSCs é limitada, esse aspecto não é bem definido ou de muito interesse. Em relação ao processo de abastecimento, Wangeheim et al. [3] encontraram em seu estudo de caso que esse era um dos processos prioritários para melhoria. Em outro estudo [31] com oito empresas, eles descobriram que algumas empresas haviam estabelecido processos sistemáticos de fornecimento e haviam desenvolvido modelos de contratos para melhorar o relacionamento com seus clientes. Clarke e O´Connor [46], em sua pesquisa com 15 PMEs, descobriram que essas empresas haviam feito amplas melhorias, especificamente na área de licitação, bem como na negociação com os clientes. Processos de Projetos. No que diz respeito aos processos do projeto, dois estudos [3, 32] que avaliaram as SSCs relataram que o gerenciamento de projetos é considerado um processo de alta prioridade. Saastamoinen e Tukiainen [52] apontaram que o planejamento de projetos é um aspecto importante nos CSCs. Além disso, dentro do plano do projeto, a abordagem de desenvolvimento deve ser claramente descrita. Para SSCs, um projeto é gerenciado de forma iterativa ou incremental, tendendo a seguir o modelo em cascata. A capacidade de trabalho e a aproximação do tempo de um projeto são geralmente calculadas com base na experiência do gerente de projeto. Processos de ativação de projetos organizacionais. Em relação ao estabelecimento de processos no gerenciamento de modelos de ciclo de vida, O'Connor et al. [29] explicaram que o estabelecimento de processos em SSCs é baseado em duas categorias: background de trabalho do gerente de desenvolvimento de software e requisitos do mercado [29]. Do ponto de vista de um SSC, os benefícios proporcionados por um processo mais padronizado poderiam incluir aumento da competitividade, satisfação superior do cliente e maior qualidade do produto [36]. Em relação às avaliações de processo, um estudo [14] relatou que as SSCs geralmente evitam a adoção de qualquer padrão de processo em seu processo de desenvolvimento de software. Isso pode ser devido à opinião de que os padrões de processo são excessivamente complexos. No entanto, no contexto da melhoria do processo, o objetivo das CSCs é melhorar a eficiência dentro da organização, melhorar a produtividade e reduzir o tempo de desenvolvimento [43]. Os SSCs tendem a ter problemas com o aprimoramento efetivo de seus processos de software [13], e a maior dificuldade pode ser uma luta para mudar [54]. No contexto da gestão do conhecimento (KMP) dentro",05/05/2019 19:49:01,05/05/2019 19:57:38
70,arquivo2,###,,,05/05/2019 19:49:01,05/05/2019 19:57:45
71,arquivo2,###,"the human resource management process, Basri and O’Connor [55] stated that SSCs have clear KMPs within their organizations. They pointed out that knowledge waste is not a serious problem in a small-scale context. Also, informal communication and macro management can assist in creating team dynamics, which can further heighten KMP [55, 49]. Concerning quality management, requirements for ensuring that SSCs meet a certain level of quality are lacking. To improve the quality of their products, a clear denition of quality is needed, and goals for quality management need to be set. These quality goals can be altered based on the project [52]. In the context of software maintenance within technical processes, one study observed that software maintenance is poorly implemented in some companies and needs to be a priority for further improvement [24]. A number of companies have reported that they have amplied the refactoring level to reduce future support and maintenance costs [46]. Challenges in Process. Some challenges were also observed in the primary study papers. A list of the challenges observed and experienced by SSCs within the processes is presented in Table 4. The challenges are mostly related to the following processes: software requirements analysis, software qualication testing, software quality assur- ance, software documentation management, software conguration management, and life cycle model management.","No processo de gestão de recursos humanos, Basri e O'Connor [55] afirmaram que os CSCs têm KMPs claros dentro de suas organizações. Eles apontaram que o desperdício de conhecimento não é um problema sério em um contexto de pequena escala. Além disso, a comunicação informal e o gerenciamento macro podem ajudar na criação de dinâmicas de equipe, o que pode aumentar ainda mais o KMP [55, 49]. No que diz respeito à gestão da qualidade, faltam requisitos para garantir que os CSCs atendam a um determinado nível de qualidade. Para melhorar a qualidade de seus produtos, é necessário definir claramente a qualidade e estabelecer metas para a gestão da qualidade. Essas metas de qualidade podem ser alteradas com base no projeto [52]. No contexto da manutenção de software dentro de processos técnicos, um estudo observou que a manutenção de software é mal implementada em algumas empresas e precisa ser uma prioridade para melhorias adicionais [24]. Várias empresas relataram que ampliaram o nível de refatoração para reduzir os custos futuros de suporte e manutenção [46]. Desafios no processo. Alguns desafios também foram observados nos estudos preliminares. Uma lista dos desafios observados e experimentados pelos SSCs dentro dos processos é apresentada na Tabela 4. Os desafios estão principalmente relacionados aos seguintes processos: análise de requisitos de software, teste de qualificação de software, garantia de qualidade de software, gerenciamento de documentação de software, software gerenciamento de configuração e gerenciamento do modelo de ciclo de vida.",05/05/2019 19:49:01,05/05/2019 19:57:51
72,arquivo2,###,"Table 4. Challenges in processes Process Challenge Description Software Understanding The gathered information needs to be clearly requirements gathered understood to determine its business value and analysis information to further develop it into an explicit product requirements for release plan [27] This is difculty in sharing information between the customers, product management team, and the rest of the organization [27] Nonfunctional requirements such as performance and the usability of software products are hardly documented. The focus is more on collecting functional requirements [52] This refers to the lack of proper testing knowledge [25]. This may be due to undened process descriptions or quality manuals in small companies. This results in uncertainty regarding when and what to test QA denition The meaning of QA differs between companies [44]. The lack of proper process knowledge and a clear denition of QA may be the cause for this QA as overhead Due to a smaller number of employees and resources, small companies consider QA activities as a burden [26]","Tabela 4. Desafios nos processos Processo Desafio Descrição Software Entendimento As informações coletadas precisam ser claramente reunidas com os requisitos para determinar seu valor de negócios e informações de análise para desenvolvê-la em requisitos explícitos do produto para o plano de liberação [27]. compartilhamento de informações entre os clientes, a equipe de gerenciamento de produtos e o restante da organização. [27] Requisitos não funcionais, como desempenho e usabilidade de produtos de software, são dificilmente documentados. O foco é mais na coleta de requisitos funcionais [52] Isso se refere à falta de conhecimento adequado de testes [25]. Isto pode ser devido a descrições de processos ou manuais de qualidade em pequenas empresas. Isso resulta em incerteza sobre quando e o que testar a definição de QA O significado de QA difere entre empresas [44]. A falta de conhecimento adequado do processo e uma definição clara de QA podem ser a causa deste QA como overhead. Devido a um número menor de funcionários e recursos, as pequenas empresas consideram as atividades de QA como um fardo [26]",05/05/2019 19:49:01,05/05/2019 19:57:58
73,arquivo2,###,Software qualication testing,Software como teste de cátions,05/05/2019 19:49:01,05/05/2019 19:58:05
74,arquivo2,###,Software quality assurance,Garantia de qualidade de software,05/05/2019 19:49:01,05/05/2019 19:58:12
75,arquivo2,###,Communication gaps,Lacunas de comunicação,05/05/2019 19:49:01,05/05/2019 19:58:18
76,arquivo2,###,Nonfunctional requirements,Requisitos não Funcionais,05/05/2019 19:49:01,05/05/2019 19:58:24
77,arquivo2,###,Testing knowledge,Teste de conhecimento,05/05/2019 19:49:01,05/05/2019 19:58:31
78,arquivo2,###,(Continued),(Contínuo),05/05/2019 19:49:01,05/05/2019 19:58:37
79,arquivo2,###,,,05/05/2019 19:49:01,05/05/2019 19:58:43
80,arquivo2,###,Software conguration management,Gerenciamento de configuração de software,05/05/2019 19:49:01,05/05/2019 19:58:49
81,arquivo2,###,"Table 4. (Continued) Process Challenge Description Software No The information is often transferred in documentation documentation discussions without documenting it. Due to management this, scheduling a meeting at a specied time is a challenge in SSCs [25] CM guidelines. Due to a lack of proper CM guidelines, there is uncertainty about which work products should be with version control [52]. This is due to an undened process description or the lack of quality manuals in SSC SSCs usually avoid the adoption of any process standards in their software development process [14]. The reason could be due to that SSCs’ consider process assessments and improvement as overly complex or think that they could raise project costs and delay project delivery","Tabela 4. (Continuação) Processo Desafio Descrição Software Não As informações são geralmente transferidas nas discussões da documentação da documentação sem documentá-las. Devido ao gerenciamento, programar uma reunião em um horário específico é um desafio nas diretrizes do CMS [25]. Devido à falta de diretrizes apropriadas de CM, há incerteza sobre quais produtos de trabalho devem estar com o controle de versão [52]. Isto é devido a uma descrição do processo indefinida ou a falta de manuais de qualidade em SSC SSCs geralmente evitam a adoção de quaisquer padrões de processo em seu processo de desenvolvimento de software [14]. O motivo pode ser o fato de os CSCs considerarem as avaliações de processos e a melhoria como excessivamente complexas ou acham que poderiam aumentar os custos do projeto e atrasar a entrega do projeto.",05/05/2019 19:49:01,05/05/2019 19:58:55
82,arquivo2,###,Life cycle model management,Gerenciamento de modelo de ciclo de vida,05/05/2019 19:49:01,05/05/2019 19:59:02
83,arquivo2,###,Avoid process adoption,Evite a adoção de processos,05/05/2019 19:49:01,05/05/2019 19:59:09
84,arquivo2,###,5 Discussion and Conclusion,5 Discussão e Conclusão,05/05/2019 19:49:01,05/05/2019 19:59:15
85,arquivo2,###,"In this paper, we have applied a systematic review method to analyze the literature related to processes within the SSC context, with the goal of exploring the state of the practice of the software development processes and the challenges associated with them.","Neste artigo, aplicamos um método de revisão sistemática para analisar a literatura relacionada a processos dentro do contexto SSC, com o objetivo de explorar o estado da prática dos processos de desenvolvimento de software e os desafios associados a eles.",05/05/2019 19:49:01,05/05/2019 19:59:21
86,arquivo2,###,"In regard to RQ1:What is the state-of-practice in terms of the use of processes in small software companies? The current state of the practice related to the software development processes in SSCs can be seen in Table 3. It shows that software requirements analysis (49 %) within software implementation processes, project planning (39 %) within project processes, conguration management (22 %) in soft- ware support processes, and life cycle model management (56 %) in organizational project-enabling processes are the frequently considered processes for improvement when software process improvement (SPI) programs are conducted in SSCs. This suggests that SSC are mostly attracted to the above processes. The reason for the signicant frequency of software requirement may be that requirements are considered an obligatory process and are often fundamental to any software company’s success [51]. Therefore, it is considered to be a critical process for further improvements since SSCs wish to quickly deliver what their customers want to remain competitive in a dynamic market and to maintain a healthy relationship with their customers [15]. Thus, focusing more on requirement engineering seems to be legitimate, based on the nature of SSCs.","Em relação ao RQ1: Qual é o estado de prática em termos do uso de processos em pequenas empresas de software? O estado atual da prática relacionada aos processos de desenvolvimento de software em SSCs pode ser visto na Tabela 3. Ele mostra que a análise de requisitos de software (49%) dentro de processos de implementação de software, planejamento de projeto (39%) dentro de processos de projeto, gerenciamento de configuração (22%) em processos de suporte de software, e o gerenciamento de modelos de ciclo de vida (56%) em processos de capacitação de projetos organizacionais são os processos freqüentemente considerados para melhoria quando programas de melhoria de processos de software (SPI) são conduzidos em SSCs. Isto sugere que o SSC é principalmente atraído pelos processos acima. A razão para a frequência significativa de requisitos de software pode ser que os requisitos sejam considerados um processo obrigatório e muitas vezes são fundamentais para o sucesso de qualquer empresa de software [51]. Portanto, é considerado um processo crítico para novas melhorias, uma vez que os SSCs desejam entregar rapidamente o que seus clientes desejam manter competitivos em um mercado dinâmico e manter um relacionamento saudável com seus clientes [15]. Assim, focar mais na engenharia de requisitos parece ser legítimo, baseado na natureza dos SSCs.",05/05/2019 19:49:01,05/05/2019 19:59:28
87,arquivo2,###,"In regard to RQ2:What are the challenges that small software companies face in the processes? Several challenges were also found in the context of processes, such as a lack of understanding in terms of what collected requirements really mean, a lack of","Em relação ao RQ2: Quais são os desafios que as pequenas empresas de software enfrentam nos processos? Vários desafios também foram encontrados no contexto de processos, como a falta de compreensão em termos do que os requisitos coletados realmente significam, a falta de",05/05/2019 19:49:01,05/05/2019 19:59:36
88,arquivo2,###,,,05/05/2019 19:49:01,05/05/2019 19:59:42
89,arquivo2,###,"testing knowledge, and a lack of CM guidelines (see Table 4). The reported challenges mostly fall under the frequently reported processes in Table 4. Typically, SSCs do not implement the necessary SPI programs for improving the process [15, 7]. In fact, most SSCs lack the required knowledge [14]. This could be a possible root cause for the many challenges revealed in the primary study papers. Our observation from this review is that most of the studies we analyzed were conducted in collaboration with SSCs and that some also included medium-sized companies. Some papers referred to the SPI program based on models such as CMMI and SPICE within SSCs. We also observed that the SPI efforts carried out in SSCs are signicantly reported in the literature, while descriptions of software processes in SSCs have received surprisingly little attention. An exploration of the empirical methods used in the primary studies showed that the majority of the studies were case studies. However, based on a systematic and validated model [19], our analysis shows that the majority of these papers fall under the low-rigor category (i.e., most of the studies lacked an adequate description of the study context, study design, and/or study validity). Therefore, further rigorous empirical studies within the context of software processes and SSCs are required. Various challenges were also found during the review that should be validated empirically in future research.","teste de conhecimento, e falta de diretrizes CM (ver Tabela 4). Os desafios relatados caem principalmente nos processos relatados com freqüência na Tabela 4. Normalmente, os CSCs não implementam os programas SPI necessários para melhorar o processo [15, 7]. De fato, a maioria das SSCs não possui o conhecimento necessário [14]. Esta poderia ser uma possível causa para os muitos desafios revelados nos estudos preliminares. Nossa observação desta revisão é que a maioria dos estudos que analisamos foram conduzidos em colaboração com SSCs e que alguns também incluíram empresas de médio porte. Alguns artigos referiram-se ao programa SPI com base em modelos como o CMMI e o SPICE nos SSCs. Também observamos que os esforços do SPI realizados em CSCs são significativamente relatados na literatura, enquanto as descrições de processos de software em SSCs receberam surpreendentemente pouca atenção. Uma exploração dos métodos empíricos usados ​​nos estudos primários mostrou que a maioria dos estudos eram estudos de caso. No entanto, com base em um modelo sistemático e validado [19], nossa análise mostra que a maioria desses artigos se enquadra na categoria de baixo rigor (ou seja, a maioria dos estudos não tinha uma descrição adequada do contexto do estudo, desenho do estudo e / ou validade do estudo). Portanto, mais estudos empíricos rigorosos dentro do contexto de processos de software e SSCs são necessários. Vários desafios também foram encontrados durante a revisão, que devem ser validados empiricamente em pesquisas futuras.",05/05/2019 19:49:01,05/05/2019 19:59:48
90,arquivo2,###,Acknowledgments. This research is supported by HILLA and ICT SHOK N4S (Need for Speed) programs funded by TEKES (Finnish Funding Agency for Technology and Innovation).,"Agradecimentos Esta pesquisa é apoiada pelos programas HILLA e ICT SHOK N4S (Need for Speed), financiados pela TEKES (Finnish Financing Agency for Technology and Innovation).",05/05/2019 19:49:01,05/05/2019 19:59:55
91,arquivo2,###,References,Referências,05/05/2019 19:49:01,05/05/2019 20:00:02
92,arquivo2,###,"1. Arora, A., Gambardella, A.: The globalization of the software industry: perspectives and opportunities for developed and developing countries (2004) 2. Richardson, I., von Wangenheim, C.G.: Why are small software organizations different? IEEE Softw. 24, 18–22 (2007) 3. VonWangenheim, C.G.,Weber, S., Hauck, J.C.R., Trentin, G.: Experiences on establishing software processes in small companies. Inf. Softw. Technol. 48, 890–900 (2006) 4. Pettersson, F., Ivarsson, M., Gorschek, T., Öhman, P.: A practitioner’s guide to light weight software process assessment and improvement planning. J. Syst. Softw. 81, 972–995 (2008) 5. Fuggetta, A., Di Nitto, E.: Software process. In: Proceedings of the on Future of Software Engineering - FOSE 2014, pp. 1–12. ACM Press, New York, USA (2014) 6. De Castro, R.M., Braga, J.L., Soares, L.S., Oliveira, A.D.P.: Selection of software development good practices in micro and small enterprises: an approach using knowledge-based systems. In: 2012 31st International Conference on Chilean Computer Science Society, pp. 12–20 (2012) 7. Pino, F.J., García, F., Piattini, M.: Software process improvement in small and medium software enterprises: a systematic review. Softw. Qual. J. 16, 237–261 (2008) 8. Sulayman, M., Mendes, E.: A systematic literature review of software process improvement in small and medium web companies. In: Ślęzak, D., Kim, T.-H., Kiumi, A., Jiang, T., Verner, J., Abrahão, S. (eds.) ASEA 2009. CCIS, vol. 59, pp. 1–8. Springer, Heidelberg (2009)","1. Arora, A., Gambardella, A .: A globalização da indústria de software: perspectivas e oportunidades para países desenvolvidos e em desenvolvimento (2004) 2. Richardson, I., von Wangenheim, C.G .: Por que as pequenas organizações de software são diferentes? IEEE Softw. 24, 18–22 (2007) 3. VonWangenheim, C.G., Weber, S., Hauck, J.C.R., Trentin, G .: Experiências no estabelecimento de processos de software em pequenas empresas. Inf. Softw. Technol. 48, 890–900 (2006) 4. Pettersson, F., Ivarsson, M., Gorschek, T., Öhman, P .: Um guia prático para avaliação de processos de software leve e planejamento de melhoria. J. Syst. Softw. 81, 972–995 (2008) 5. Fuggetta, A., Di Nitto, E .: Processo de software. In: Anais do Futuro da Engenharia de Software - FOSE 2014, pp. 1-12. ACM Press, Nova York, EUA (2014) 6. De Castro, R.M., Braga, J.L., Soares, L.S., Oliveira, A.D.P .: Seleção de boas práticas de desenvolvimento de software em micro e pequenas empresas: uma abordagem usando sistemas baseados em conhecimento. In: 2012 31ª Conferência Internacional sobre a Sociedade Chilena de Informática, pp. 12-20 (2012) 7. Pino, F.J., Garcia, F., Piattini, M .: Melhoria de processos de software em pequenas e médias empresas de software: uma revisão sistemática. Softw. Qual. J. 16, 237-261 (2008) 8. Sulayman, M., Mendes, E .: Uma revisão sistemática da literatura de melhoria de processos de software em pequenas e médias empresas da web. Em: Ślęzak, D., Kim, T.-H., Kiumi, A., Jiang, T., Verner, J., Abrahão, S. (eds.) ASEA 2009. CCIS, vol. 59, pp. 1–8. Springer, Heidelberg (2009)",05/05/2019 19:49:01,05/05/2019 20:00:09
93,arquivo2,###,,,05/05/2019 19:49:01,05/05/2019 20:00:16
94,arquivo2,###,"9. Paternoster, N., Giardino, C., Unterkalmsteiner, M., Gorschek, T., Abrahamsson, P.: Software development in startup companies: a systematic mapping study. Inf. Softw. Technol. 56, 1200–1218 (2014) 10. Klotins, E., Unterkalmsteiner, M., Gorschek, T.: Software engineering knowledge areas in startup companies : a mapping study. In: Fernandes, J.M., Machado, R.J., Wnuk, K. (eds.) ICSOB 2015. LNBIP, vol. 210, pp. 245–247. Springer, Heidelberg (2015) 11. Zhang, H., Ali Babar, M.: Systematic reviews in software engineering: an empirical investigation. Inf. Softw. Technol. 55, 1341–1354 (2013) 12. ISO/IEC/IEEE Standard for Systems and Software Engineering - Software Life Cycle Processes (2008) 13. Espinosa-Curiel, I.E., Rodríguez-Jacobo, J., Fernández-Zepeda, J.A.: A framework for evaluation and control of the factors that inﬂuence the software process improvement in small organizations. J. Softw. Evol. Process. 25, 393–406 (2013) 14. Basri, S., O’Connor, R.V.: Understanding the perception of very small software companies towards the adoption of process standards. In: Riel, A., O’Connor, R., Tichkiewitch, S., Messnarz, R. (eds.) EuroSPI 2010. CCIS, vol. 99, pp. 153–164. Springer, Heidelberg (2010) 15. Tosun, A., Bener, A., Turhan, B.: Implementation of a software quality improvement project in an SME: a before and after comparison. In: 2009 35th EUROMICRO Conference on Software Engineering and Advanced Applications, SEAA 2009, pp. 203–209 (2009) 16. O’Connor, R.V., Laporte, C.Y.: Using ISO/IEC 29110 to harness process improvement in very small entities. In: O`Connor, R.V., Pries-Heje, J., Messnarz, R. (eds.) EuroSPI 2011. CCIS, vol. 172, pp. 225–235. Springer, Heidelberg (2011) 17. Kitchenham, B., Charters, S.: Guidelines for performing systematic literature reviews in software engineering. Engineering 2, 1051 (2007) 18. StArt — LaPES - Laboratório de Pesquisa em Engenharia de Software. http://lapes.dc. ufscar.br/tools/start_tool 19. Ivarsson, M., Gorschek, T.: A method for evaluating rigor and industrial relevance of technology evaluations. Empir. Softw. Eng. 16, 365–395 (2011) 20. Cruzes, D.S., Dyba, T.: Recommended steps for thematic synthesis in software engineering. In: 2011 International Symposium on Empirical Software Engineering and Measurement, pp. 275–284 (2011) 21. Yin, R.K.: Case Study Research: Design and Methods. Sage Publications, Thousand Oaks (2009) 22. Hidayah, I.,Wahyuni,W., Nugroho, L.E.: Process model and software process improvement for small software organization: an ethnographic study in Indonesia. 2, 852–856 (2012) 23. Savolainen, P., Sihvonen, H.-M., Ahonen, J.: SPI with lightweight software process modeling in a small software company. Softw. Process Improv. 4764, 71–81 (2007) 24. Ayalew, Y., Motlhala, K.: Software process practices in small software companies in Botswana. In: 2014 14th International Conference on Computational Science Its Applications, pp. 49–57 (2014) 25. Valtanen, A., Ahonen, J.J.: Big improvements with small changes: improving the processes of a small software company. In: Jedlitschka, A., Salo, O. (eds.) PROFES 2008. LNCS, vol. 5089, pp. 258–272. Springer, Heidelberg (2008) 26. Lester, N.G., Wilkie, F.G., Mcfall, D., Ware, M.P.: Investigating the role of CMMI with expanding company size for small- to medium-sized enterprises. J. Softw.Maint. Evol. Res. Pract. 22, 17–31 (2010) 27. Jantunen, S.: Exploring software engineering practices in small and medium-sized organizations. In: Proceedings of the 2010 ICSE Workshop on Cooperative and Human Aspects of Software Engineering - CHASE 2010, pp. 96–101 (2010)","9. Paternoster, N., Giardino, C., Unterkalmsteiner, M., Gorschek, T., Abrahamsson, P .: Desenvolvimento de software em empresas iniciantes: um estudo de mapeamento sistemático. Inf. Softw. Technol. 56, 1200-1218 (2014) 10. Klotins, E., Unterkalmsteiner, M., Gorschek, T .: áreas de conhecimento de engenharia de software em empresas iniciantes: um estudo de mapeamento. In: Fernandes, J. M., Machado, R.J., Wnuk, K. (eds.) ICSOB 2015. LNBIP, vol. 210, pp. 245-247. Springer, Heidelberg (2015) 11. Zhang, H., Babar Ali, M .: revisões sistemáticas em engenharia de software: uma investigação empírica. Inf. Softw. Technol. 55, 1341–1354 (2013) 12. Norma ISO / IEC / IEEE para Sistemas e Engenharia de Software - Processos de Ciclo de Vida de Software (2008) 13. Espinosa-Curiel, IE, Rodríguez-Jacobo, J., Fernández-Zepeda, JA: Uma estrutura para avaliação e controle dos fatores que influenciam a melhoria do processo de software em pequenas organizações. J. Softw. Evol. Processo. 25, 393–406 (2013) 14. Basri, S., O'Connor, R.V .: Entendendo a percepção de empresas de software muito pequenas em relação à adoção de padrões de processo. Em: Riel, A., O'Connor, R., Tichkiewitch, S., Messnarz, R. (ed.) EuroSPI 2010. CCIS, vol. 99, pp. 153–164. Springer, Heidelberg (2010) 15. Tosun, A., Bener, A., Turhan, B .: Implementação de um projeto de melhoria de qualidade de software em uma PME: uma comparação antes e depois. In: 2009 35ª Conferência EUROMICRO sobre Engenharia de Software e Aplicações Avançadas, SEAA 2009, pp. 203–209 (2009) 16. O’Connor, R.V., Laporte, C.Y .: Usando a ISO / IEC 29110 para aproveitar a melhoria de processos em entidades muito pequenas. Em: O`Connor, R.V., Pries-Heje, J., Messnarz, R. (ed.) EuroSPI 2011. CCIS, vol. 172, pp. 225-235. Springer, Heidelberg (2011) 17. Kitchenham, B., Charters, S .: Diretrizes para realizar revisões sistemáticas da literatura em engenharia de software. Engenharia 2, 1051 (2007) 18. StArt - LaPES - Laboratório de Pesquisa em Engenharia de Software. http: //lapes.dc. ufscar.br/tools/start_tool 19. Ivarsson, M., Gorschek, T .: Um método para avaliar o rigor e a relevância industrial das avaliações tecnológicas. Empir. Softw. Eng. 16, 365–395 (2011) 20. Cruzes, D.S., Dyba, T .: Etapas recomendadas para síntese temática em engenharia de software. In: 2011 Simpósio Internacional de Engenharia e Medição de Software Empírico, pp. 275-284 (2011) 21. Yin, R.K .: Estudo de Caso de Pesquisa: Design e Métodos. Sage Publications, Thousand Oaks (2009) 22. Hidayah, I., Wahyuni, W., Nugroho, L.E .: Modelo de processo e melhoria de processos de software para organização de pequenos softwares: um estudo etnográfico na Indonésia. 2, 852–856 (2012) 23. Savolainen, P., Sihvonen, H.-M., Ahonen, J .: SPI com modelagem leve de processos de software em uma pequena empresa de software. Softw. Processo Improv. 4764, 71-81 (2007) 24. Ayalew, Y., Motlhala, K .: Práticas de processos de software em pequenas empresas de software em Botswana. In: 2014 14ª Conferência Internacional sobre Ciência Computacional Suas Aplicações, pp. 49–57 (2014) 25. Valtanen, A., Ahonen, J.J .: Grandes melhorias com pequenas mudanças: melhoria dos processos de uma pequena empresa de software. Em: Jedlitschka, A., Salo, O. (eds.) PROFES 2008. LNCS, vol. 5089, pp. 258-272. Springer, Heidelberg (2008) 26. Lester, N.G., Wilkie, F. G., Mcfall, D., Ware, M.P .: Investigando o papel do CMMI com a expansão do tamanho da empresa para pequenas e médias empresas. J. Macio. Evol. Res. Praticar 22, 17–31 (2010) 27. Jantunen, S .: Explorando práticas de engenharia de software em pequenas e médias empresas. In: Anais do Workshop ICSE 2010 sobre Aspectos Cooperativos e Humanos da Engenharia de Software - CHASE 2010, pp. 96–101 (2010)",05/05/2019 19:49:01,05/05/2019 20:00:22
95,arquivo2,###,,,05/05/2019 19:49:01,05/05/2019 20:00:30
96,arquivo2,###,"28. Yilmaz, L., Phillips, J.: The impact of turbulence on the effectiveness and efciency of software development teams in small organizations. Softw. Process Improv. Pract. 12, 247– 265 (2007) 29. O’Connor, R.V., Basri, S., Coleman, G.: Exploring managerial commitment towards SPI in small and very small enterprises. In: Riel, A., O’Connor, R., Tichkiewitch, S., Messnarz, R. (eds.) EuroSPI 2010. CCIS, vol. 99, pp. 268–279. Springer, Heidelberg (2010) 30. Jezreel,M.,Mirna,M., Pablo, N., Edgar, O., Alejandro, G., Sandra,M.: Identifying ndings for software process improvement in SMEs: an experience. In: Proceedings of the 2012 9th Electronics, Robotics and Automotive Mechanics Conference CERMA 2012, pp. 141–146 (2012) 31. von Wangeheim, C.G., Anacleto, A., Salviano, C.F.: Helping small companies assess software processes. IEEE Softw. 23, 91–98 (2006) 32. von Wangenheim, C.G., Varkoi, T., Salviano, C.F.: Standard based software process assessments in small companies. Softw. Process Improv. Pract. 11, 329–335 (2006) 33. Basri, S., O’Connor, R.: Organizational commitment towards software process improvement an irish software VSEs case study. In: Proceedings of 4th International Symposium on Information Technology 2010 (ITSim 2010), Malaysia, June 2010 34. Pino, F.J., Garcia, F., Piattini, M.: Key processes to start software process improvement in small companies. In: Proceedings of the 2009 ACM Symposium on Applied Computing, pp. 509–516 (2009) 35. Del Maschi, V.F., Spinola, M.M., Costa, I.A., Esteves, A.L., Souza, L.S., Vendramel, W., Pirola, J.: Practical experience in customization for a software development process for small companies based on RUP process and MSF. In: Software Process Improvement for Small and Medium Enterprises: Techniques and Case Studies, pp. 71–93 (2008) 36. Laporte, C.Y., Alexandre, S., O’Connor, R.: A software engineering lifecycle standard for very small enterprises. In: O’Connor, R.V., Baddoo, N., Smolander, K., Messnarz, R. (eds.) EuroSPI 2008. CCIS, vol. 16, pp. 129–141. Springer, Heidelberg (2008) 37. Habra, N., Alexandre, S., Desharnais, J.M., Laporte, C.Y., Renault, A.: Initiating software process improvement in very small enterprises: experience with a light assessment tool. Inf. Softw. Technol. 50, 763–771 (2008) 38. Nilsson, A., Castro, L.M., Rivas, S., Arts, T.: Assessing the effects of introducing a new software development process: a methodological description. Int. J. Softw. Tools Technol. Transf. 17, 1–16 (2013) 39. McCaffery, F., McFall, D., Wilkie, F.G.: Improving the express process appraisal method. In: Bomarius, F., Komi-Sirviö, S. (eds.) PROFES 2005. LNCS, vol. 3547, pp. 286–298. Springer, Heidelberg (2005) 40. Hauck, J.C.R., vonWangenheim, C.G., de Souza, R.H., Thiry,M.: Process reference guides – support for improving software processes in alignment with reference models and standards. In: O’Connor, R.V., Baddoo, N., Smolander, K., Messnarz, R. (eds.) EuroSPI 2008. CCIS, vol. 16, pp. 70–81. Springer, Heidelberg (2005) 41. Cater-Steel, A.P.: Low-rigour, rapid software process assessments for small software development rms. In: Proceedings of the Australian Software Engineering Conference, ASWEC 2004, pp. 368–377 (2004) 42. Hurtado, J.A., Bastarrica, M.C., Ochoa, S.F., Simmonds, J.: MDE software process lines in small companies. J. Syst. Softw. 86, 1153–1171 (2013) 43. Tufﬂey, A., Grove, B., McNair, G.: SPICE for small organisations. Softw. Process Improv. Pract. 9, 23–31 (2004) 44. Wilkie, F.G.,McFall, D.,McCaffery, F.: An evaluation of CMMI process areas for small - to medium-sized software development organisations. Softw. Process Improv. Pract. 10, 189– 201 (2005)","28. Yilmaz, L., Phillips, J .: O impacto da turbulência na eficácia e eficiência das equipes de desenvolvimento de software em pequenas organizações. Softw. Processo Improv. Praticar 12, 247-265 (2007) 29. O'Connor, R.V., Basri, S., Coleman, G .: Explorando o compromisso gerencial com o SPI em pequenas e muito pequenas empresas. Em: Riel, A., O'Connor, R., Tichkiewitch, S., Messnarz, R. (ed.) EuroSPI 2010. CCIS, vol. 99, pp. 268-279. Springer, Heidelberg (2010) 30. Jezreel, M., Mirna, M., Pablo, N., Edgar, O., Alejandro, G., Sandra, M.: Identificando descobertas para melhoria de processos de software em PMEs: uma experiência . In: Anais da 2012a Nona Conferência de Eletrônica, Robótica e Mecânica Automotiva CERMA 2012, pp. 141–146 (2012) 31. von Wangeheim, C.G., Anacleto, A., Salviano, C.F .: Ajudando pequenas empresas a avaliar processos de software. IEEE Softw. 23, 91-98 (2006) 32. von Wangenheim, C. G., Varkoi, T., Salviano, C.F .: Avaliações de processos de software baseados em padrões em pequenas empresas. Softw. Processo Improv. Praticar 11, 329–335 (2006) 33. Basri, S., O'Connor, R .: Compromisso organizacional em relação à melhoria de processos de software e estudo de caso de um software irlandês VSE. In: Anais do 4º Simpósio Internacional de Tecnologia da Informação 2010 (ITSim 2010), Malásia, Junho de 2010 34. Pino, F.J., Garcia, F., Piattini, M .: Principais processos para iniciar a melhoria de processos de software em pequenas empresas. In: Anais do ACM 2009 Simpósio em Computação Aplicada, pp. 509-516 (2009) 35. Del Maschi, VF, Spinola, MM, Costa, IA, Esteves, AL, Souza, LS, Vendramel, W., Pirola, J .: Experiência prática em customização para um processo de desenvolvimento de software para pequenas empresas com base no processo RUP e MSF. In: Melhoria de Processos de Software para Pequenas e Médias Empresas: Técnicas e Estudos de Casos, pp. 71–93 (2008) 36. Laporte, CY, Alexandre, S., O'Connor, R .: Um padrão de ciclo de vida de engenharia de software para muito pequenas empreendimentos. Em: O'Connor, R.V., Baddoo, N., Smolander, K., Messnarz, R. (ed.) EuroSPI 2008. CCIS, vol. 16, pp. 129-141. Springer, Heidelberg (2008) 37. Habra, N., Alexandre, S., Desharnais, JM, Laporte, C.Y., Renault, A .: Iniciando a melhoria de processos de software em empresas muito pequenas: experiência com uma ferramenta de avaliação de luz. Inf. Softw. Technol. 50, 763-771 (2008) 38. Nilsson, A., Castro, L.M., Rivas, S., Artes, T .: Avaliando os efeitos da introdução de um novo processo de desenvolvimento de software: uma descrição metodológica. Int. J. Softw. Ferramentas Technol. Transf. 17, 1-16 (2013) 39. McCaffery, F., McFall, D., Wilkie, F.G .: Melhorando o método de avaliação de processo expresso. Em: Bomarius, F., Komi-Sirviö, S. (eds.) PROFES 2005. LNCS, vol. 3547, pp. 286-298. Springer, Heidelberg (2005) 40. Hauck, J.C.R., vonWangenheim, C.G., Souza, R.H., Thiry, M .: Guias de referência de processos - suporte para melhorar processos de software em alinhamento com modelos e padrões de referência. Em: O'Connor, R.V., Baddoo, N., Smolander, K., Messnarz, R. (ed.) EuroSPI 2008. CCIS, vol. 16, pp. 70-81. Springer, Heidelberg (2005) 41. Cater-Steel, A.P .: Avaliações de processos de software rápidas e de baixo rigor para pequenas empresas de desenvolvimento de software. In: Anais da Conferência Australiana de Engenharia de Software, ASWEC 2004, pp. 368–377 (2004) 42. Hurtado, J. A., Bastarrica, M.C., Ochoa, S.F., Simmonds, J .: Linhas de processo de software MDE em pequenas empresas. J. Syst. Softw. 86, 1153–1171 (2013) 43. Tuf ﬂ ey, A., Grove, B., McNair, G .: SPICE para pequenas organizações. Softw. Processo Improv. Praticar 9, 23–31 (2004) 44. Wilkie, F.G., McFall, D., McCaffery, F .: Uma avaliação das áreas de processo do CMMI para organizações de desenvolvimento de software de pequeno a médio porte. Softw. Processo Improv. Praticar 10, 189– 201 (2005)",05/05/2019 19:49:01,05/05/2019 20:00:36
97,arquivo2,###,,,05/05/2019 19:49:01,05/05/2019 20:00:43
98,arquivo2,###,"45. Diaz, J., Garbajosa, J., Calvo-Manzano, J.A.:Mapping CMMI level 2 to scrum practices: an experience report. In: O’Connor, R.V., Baddoo, N., Cuadrago Gallego, J., Rejas Muslera, R., Smolander, K., Messnarz, R. (eds.) EuroSPI 2009. CCIS, vol. 42, pp. 93–104. Springer, Heidelberg (2009) 46. Clarke, P., O’Connor, R.V.: An empirical examination of the extent of software process improvement in software SMEs. J. Softw. Evol. Process 25(9), 981–998 (2013) 47. Caballero, E., Calvo-Manzano, J.A., San Feliu, T.: Introducing scrum in a very small enterprise: a productivity and quality analysis. In: O`Connor, R.V., Pries-Heje, J.,Messnarz, R. (eds.) EuroSPI 2011. CCIS, vol. 172, pp. 215–224. Springer, Heidelberg (2011) 48. O’Connor, R.V.: Evaluating management sentiment towards ISO/IEC 29110 in very small software development companies. In: Mas, A., Mesquida, A., Rout, T., O’Connor, R.V., Dorling, A. (eds.) SPICE 2012. CCIS, vol. 290, pp. 277–281. Springer, Heidelberg (2012) 49. Ribaud, V., Saliou, P., O’Connor, R.V., Laporte, C.Y.: Software engineering support activities for very small entities. In: Riel, A., O’Connor, R., Tichkiewitch, S., Messnarz, R. (eds.) EuroSPI 2010. CCIS, vol. 99, pp. 165–176. Springer, Heidelberg (2010) 50. Allison, I.: Organizational factors shaping software process improvement in small-medium sized software teams: a multi-case analysis. In: Proceedings of the 7th International Conference on Quality of Information and Communications Technology, QUATIC 2010, pp. 418–423 (2010) 51. McCaffery, F., Taylor, P.S., Coleman, G.: Adept: a unied assessment method for small software companies. IEEE Softw. 24, 24–31 (2007) 52. Saastamoinen, I., Tukiainen, M.: Software process improvement in small and medium sized software enterprises in eastern nland: a state-of-the-practice study. In: Dingsøyr, T. (ed.) EuroSPI 2004. LNCS, vol. 3281, pp. 69–78. Springer, Heidelberg (2004) 53. Zhang, Y., Zhao, X., Zhang, X., Zhang, T.: Test effectiveness index: integrating product metrics with process metrics. In: 2012 IEEE International Conference on Cyber Technology in Automation, Control, and Intelligent Systems, CYBER 2012, pp. 54–57 (2012) 54. Alexandre, S., Renault, A., Habra, N.: OWPL: a gradual approach for software process improvement in SMEs. In: Proceedings of the 32nd EUROMICRO Conference on Software Engineering and Advanced Applications, SEAA 2006, pp. 328–335 (2006) 55. Basri, S., O’Connor, R.V.: Towards an understanding of software development process knowledge in very small companies. In: Abd Manaf, A., Sahibuddin, S., Ahmad, R., Mohd Daud, S., El-Qawasmeh, E. (eds.) ICIEIS 2011, Part III. CCIS, vol. 253, pp. 62–71. Springer, Heidelberg (2011) 56. Suula,M.,Makinen, T., Varkoi, T.: An approach to characterize a software process. In: 2009 Portland International Conference on Management of Engineering and Technology, PICMET 2009, pp. 1103–1109 (2009)","45. Díaz, J. Garbajosa, J., Calvo-Manzano, J.A.: Mapeando o nível 2 do CMMI para práticas de scrum: um relato de experiência. Em: O'Connor, R.V., Baddoo, N., Cuadrago Gallego, J., Rejas Muslera, R., Smolander, K., Messnarz, R. (ed.) EuroSPI 2009. CCIS, vol. 42, pp. 93–104. Springer, Heidelberg (2009) 46. Clarke, P., O'Connor, R.V .: Um exame empírico da extensão da melhoria de processos de software em PMEs de software. J. Softw. Evol. Processo 25 (9), 981-998 (2013) 47. Caballero, E., Calvo-Manzano, J. A., San Feliu, T .: Introduzindo o scrum em uma empresa muito pequena: uma análise de produtividade e qualidade. Em: O`Connor, R.V., Pries-Heje, J., Messnarz, R. (ed.) EuroSPI 2011. CCIS, vol. 172, pp. 215-224. Springer, Heidelberg (2011) 48. O’Connor, R.V .: Avaliando o sentimento de gestão em relação à ISO / IEC 29110 em empresas de desenvolvimento de software muito pequenas. Em: Mas, A., Mesquida, A., Rout, T., O'Connor, R.V., Dorling, A. (ed.) SPICE 2012. CCIS, vol. 290, pp. 277-281. Springer, Heidelberg (2012) 49. Ribaud, V., Saliou, P., O'Connor, R.V., Laporte, C.Y .: Atividades de suporte de engenharia de software para entidades muito pequenas. Em: Riel, A., O'Connor, R., Tichkiewitch, S., Messnarz, R. (ed.) EuroSPI 2010. CCIS, vol. 99, pp. 165-176. Springer, Heidelberg (2010) 50. Allison, I .: Fatores organizacionais que moldam a melhoria do processo de software em equipes de software de pequeno e médio porte: uma análise de casos múltiplos. In: Anais da 7ª Conferência Internacional sobre Qualidade da Informação e Tecnologia das Comunicações, QUATIC 2010, pp. 418-423 (2010) 51. McCaffery, F., Taylor, PS, Coleman, G. .: Adept: uma avaliação unificada método para pequenas empresas de software. IEEE Softw. 24, 24–31 (2007) 52. Saastamoinen, I., Tukiainen, M .: Melhoria de processos de software em empresas de software de pequeno e médio porte no Leste Europeu: um estudo de última geração. In: Dingsøyr, T. (ed.) EuroSPI 2004. LNCS, vol. 3281, pp. 69-78. Springer, Heidelberg (2004) 53. Zhang, Y., Zhao, X., Zhang, X., Zhang, T .: Índice de efetividade de teste: integrando métricas de produto com métricas de processo. In: 2012 IEEE Conferência Internacional sobre Cyber ​​Tecnologia em Automação, Controle e Sistemas Inteligentes, CYBER 2012, pp. 54-57 (2012) 54. Alexandre, S., Renault, A., Habra, N .: OWPL: um gradual abordagem para melhoria de processos de software em PMEs. In: Anais da 32ª Conferência EUROMICRO sobre Engenharia de Software e Aplicações Avançadas, SEAA 2006, pp. 328–335 (2006) 55. Basri, S., O'Connor, RV: Para uma compreensão do conhecimento do processo de desenvolvimento de software em muito pequena empresas. Em: Abd Manaf, A., Sahibuddin, S., Ahmad, R., Mohd Daud, S., El-Qawasmeh, E. (eds.) ICIEIS 2011, Parte III. CCIS, vol. 253, pp. 62-71. Springer, Heidelberg (2011) 56. Suula, M., Makinen, T., Varkoi, T .: Uma abordagem para caracterizar um processo de software. In: Conferência Internacional de Portland 2009 sobre Gestão de Engenharia e Tecnologia, PICMET 2009, pp. 1103–1109 (2009)",05/05/2019 19:49:01,05/05/2019 20:00:49
99,arquivo2,###,,,05/05/2019 19:49:01,05/05/2019 20:00:57
